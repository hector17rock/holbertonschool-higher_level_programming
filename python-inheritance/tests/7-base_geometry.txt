BaseGeometry = __import__('7-base_geometry').BaseGeometry

bg = BaseGeometry()

# Valid cases
bg.integer_validator("width", 10)
bg.integer_validator("height", 5)

# Invalid type
try:
    bg.integer_validator("name", "John")
except Exception as e:
    print("[{}] {}".format(e.__class__.__name__, e))
# Expected output:
# [TypeError] name must be an integer

# Zero value
try:
    bg.integer_validator("age", 0)
except Exception as e:
    print("[{}] {}".format(e.__class__.__name__, e))
# Expected output:
# [ValueError] age must be greater than 0

# Negative value
try:
    bg.integer_validator("distance", -4)
except Exception as e:
    print("[{}] {}".format(e.__class__.__name__, e))
# Expected output:
# [ValueError] distance must be greater than 0
