The ``7-base_geometry`` module
============================

Using ``BaseGeometry``
---------------------

First, import the class:

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Now test instantiating the class:
>>> bg = BaseGeometry()
>>> type(bg)
<class '7-base_geometry.BaseGeometry'>

Test the area method:
>>> bg.area()
Traceback (most recent call last):
    ...
Exception: area() is not implemented

Test integer_validator with valid inputs:
>>> bg.integer_validator("width", 10)
>>> bg.integer_validator("height", 1)

Test integer_validator with invalid types:
>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
    ...
TypeError: name must be an integer

>>> bg.integer_validator("float", 3.14)
Traceback (most recent call last):
    ...
TypeError: float must be an integer

>>> bg.integer_validator("none", None)
Traceback (most recent call last):
    ...
TypeError: none must be an integer

>>> bg.integer_validator("list", [1, 2, 3])
Traceback (most recent call last):
    ...
TypeError: list must be an integer

>>> bg.integer_validator("dict", {"key": 1})
Traceback (most recent call last):
    ...
TypeError: dict must be an integer

>>> bg.integer_validator("tuple", (4,))
Traceback (most recent call last):
    ...
TypeError: tuple must be an integer

>>> bg.integer_validator("bool", True)
Traceback (most recent call last):
    ...
TypeError: bool must be an integer

>>> bg.integer_validator("set", {1, 2})
Traceback (most recent call last):
    ...
TypeError: set must be an integer

Test integer_validator with invalid values:
>>> bg.integer_validator("zero", 0)
Traceback (most recent call last):
    ...
ValueError: zero must be greater than 0

>>> bg.integer_validator("negative", -5)
Traceback (most recent call last):
    ...
ValueError: negative must be greater than 0

Test integer_validator with missing arguments:
>>> bg.integer_validator()
Traceback (most recent call last):
    ...
TypeError: BaseGeometry.integer_validator() missing 2 required positional arguments: 'name' and 'value'

>>> bg.integer_validator("age")
Traceback (most recent call last):
    ...
TypeError: BaseGeometry.integer_validator() missing 1 required positional argument: 'value'

