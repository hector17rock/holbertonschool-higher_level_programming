#!/usr/bin/python3
import unittest
from io import StringIO
import sys

MyList = __import__('1-my_list').MyList


class TestMyList(unittest.TestCase):
    def test_inheritance(self):
        my_list = MyList()
        self.assertIsInstance(my_list, list)

    def test_append_and_print_sorted(self):
        my_list = MyList()
        my_list.append(3)
        my_list.append(1)
        my_list.append(2)

        # Capture output of print_sorted
        captured_output = StringIO()
        sys.stdout = captured_output
        my_list.print_sorted()
        sys.stdout = sys.__stdout__

        self.assertEqual(captured_output.getvalue().strip(), '[1, 2, 3]')
        self.assertEqual(my_list, [3, 1, 2])  # Ensure original list unchanged

    def test_empty_list(self):
        my_list = MyList()
        captured_output = StringIO()
        sys.stdout = captured_output
        my_list.print_sorted()
        sys.stdout = sys.__stdout__
        self.assertEqual(captured_output.getvalue().strip(), '[]')

    def test_negative_and_positive(self):
        my_list = MyList([-2, 5, 0, -1, 3])
        captured_output = StringIO()
        sys.stdout = captured_output
        my_list.print_sorted()
        sys.stdout = sys.__stdout__
        self.assertEqual(captured_output.getvalue().strip(), '[-2, -1, 0, 3, 5]')
        self.assertEqual(my_list, [-2, 5, 0, -1, 3])  # Original list unchanged


if __name__ == '__main__':
    unittest.main()

