The ``0-add_integer`` module
============================

Using ``add_integer``
---------------------

Import the function:

    >>> add_integer = __import__('0-add_integer').add_integer

Basic integer addition:
    >>> add_integer(1, 2)
    3
    >>> add_integer(100, 2)
    102
    >>> add_integer(-2, 2)
    0
    >>> add_integer(-2, -2)
    -4

Testing with floats (which should be cast to integers):
    >>> add_integer(2.5, 3.7)
    5
    >>> add_integer(2.5, -3.7)
    -1
    >>> add_integer(-2.5, -3.7)
    -5

Testing with the default value for b (98):
    >>> add_integer(2)
    100
    >>> add_integer(-2)
    96
    >>> add_integer(0)
    98

Mixed integers and floats:
    >>> add_integer(2, 3.7)
    5
    >>> add_integer(2.5, 3)
    5

Testing with large numbers:
    >>> add_integer(999999999, 1)
    1000000000
    >>> add_integer(999999999, 999999999)
    1999999998

Testing error cases - invalid types:
    >>> add_integer("hello", 3)
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer(3, "hello")
    Traceback (most recent call last):
    TypeError: b must be an integer

    >>> add_integer(None)
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer(2, None)
    Traceback (most recent call last):
    TypeError: b must be an integer

    >>> add_integer("hello", "world")
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer([1, 2, 3])
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer(2, [1, 2, 3])
    Traceback (most recent call last):
    TypeError: b must be an integer

Special float cases:
    >>> add_integer(float('inf'), 2)
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer

    >>> add_integer(2, float('inf'))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer

    >>> add_integer(float('nan'), 2)
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer

    >>> add_integer(2, float('nan'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer

